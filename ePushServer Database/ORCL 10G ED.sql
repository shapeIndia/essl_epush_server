--------------------------------------------------------
--  File created - Thursday-December-28-2017   
--------------------------------------------------------

DROP TRIGGER "COMMANDS_COMMANDID_TRIG";
DROP TRIGGER "DEVICECOMMANDS_TRG";
DROP TRIGGER "DEVICEERRORMESSAGES_DEVIC_TRIG";
DROP TRIGGER "DEVICELOGS_12_2017_TRIGGER";
DROP TRIGGER "DEVICELOGS_DEVICELOGID_TRIG";
DROP TRIGGER "DEVICELOGS_PROCESSED_DEVI_TRIG";
DROP TRIGGER "DEVICELOGSINFOBL_DEVICELO_TRIG";
DROP TRIGGER "DEVICEOPERATIONLOGS_DEVIC_TRIG";
DROP TRIGGER "DEVICES_DEVICEID_TRIG";
DROP TRIGGER "EMPLOYEES_EMPLOYEEID_TRIG";
DROP TRIGGER "EMPLOYEESBIO_EMPLOYEEBIOI_TRIG";
DROP TRIGGER "USERS_USERID_TRIG";
DROP TABLE "BIOFORMAT";
DROP TABLE "BIOTYPE";
DROP TABLE "COMMANDS";
DROP TABLE "DEVICECOMMANDS";
DROP TABLE "DEVICEERRORMESSAGES";
DROP TABLE "DEVICEGROUP";
DROP TABLE "DEVICELOGS";
DROP TABLE "DEVICELOGS_PROCESSED";
DROP TABLE "DEVICELOGSINFOBL";
DROP TABLE "DEVICEOPERATIONLOGS";
DROP TABLE "DEVICEOPERATIONLOGTYPES";
DROP TABLE "DEVICES";
DROP TABLE "EMPLOYEES";
DROP TABLE "EMPLOYEESBIO";
DROP TABLE "TIMEZONE";
DROP TABLE "USERS";
DROP TABLE "VERIFICATIONMODE";
DROP TABLE "VERIFICATIONTYPE";
--------------------------------------------------------
--  DDL for Table BIOFORMAT
--------------------------------------------------------

  CREATE TABLE "BIOFORMAT" 
   (	"BIOFORMATID" NUMBER(10,0), 
	"BIOFORMAT" NVARCHAR2(255)
   ) ;
--------------------------------------------------------
--  DDL for Table BIOTYPE
--------------------------------------------------------

  CREATE TABLE "BIOTYPE" 
   (	"BIOTYPEID" NUMBER(10,0), 
	"BIOTYPE" NVARCHAR2(255)
   ) ;
--------------------------------------------------------
--  DDL for Table COMMANDS
--------------------------------------------------------

  CREATE TABLE "COMMANDS" 
   (	"COMMANDID" NUMBER(38,0), 
	"COMMANDTYPEID" NUMBER(10,0), 
	"DEVICEID" NUMBER(38,0), 
	"EMPLOYEEID" NUMBER(38,0), 
	"BIOID" NUMBER(10,0), 
	"STATUS" NUMBER(10,0), 
	"DEVICECOMMANDID" NUMBER(38,0), 
	"CREATEDBY" NUMBER(10,0), 
	"CREATEDON" DATE, 
	"MODIFIEDON" DATE
   ) ;
--------------------------------------------------------
--  DDL for Table DEVICECOMMANDS
--------------------------------------------------------

  CREATE TABLE "DEVICECOMMANDS" 
   (	"DEVICECOMMANDID" NUMBER(10,0), 
	"TITLE" NVARCHAR2(255), 
	"SERIALNUMBER" NVARCHAR2(255), 
	"STATUS" NVARCHAR2(255), 
	"TYPE" NVARCHAR2(255), 
	"CREATIONDATE" DATE, 
	"EXECUTIONDATE" DATE, 
	"DEVICECOMMAND" NVARCHAR2(255)
   ) ;
--------------------------------------------------------
--  DDL for Table DEVICEERRORMESSAGES
--------------------------------------------------------

  CREATE TABLE "DEVICEERRORMESSAGES" 
   (	"DEVICEERRORMESSAGEID" NUMBER(10,0), 
	"SERIALNUMBER" NVARCHAR2(50), 
	"ERRORMESSAGE" CLOB, 
	"LOGSTREAM" CLOB, 
	"CREATEDDATE" NVARCHAR2(50)
   ) ;
--------------------------------------------------------
--  DDL for Table DEVICEGROUP
--------------------------------------------------------

  CREATE TABLE "DEVICEGROUP" 
   (	"DEVICEGROUPID" NUMBER(10,0), 
	"NAME" NVARCHAR2(255), 
	"DESCRIPTION" NVARCHAR2(255), 
	"VERIFICATIONTYPEID" NUMBER(10,0), 
	"LASTMODIFIEDDATE" DATE
   ) ;
--------------------------------------------------------
--  DDL for Table DEVICELOGS
--------------------------------------------------------

  CREATE TABLE "DEVICELOGS" 
   (	"DEVICELOGID" NUMBER(10,0), 
	"DOWNLOADDATE" DATE, 
	"DEVICEID" NUMBER(10,0), 
	"USERID" NVARCHAR2(50), 
	"LOGDATE" DATE, 
	"DIRECTION" NVARCHAR2(255), 
	"ATTDIRECTION" NVARCHAR2(255), 
	"C1" NVARCHAR2(255), 
	"C2" NVARCHAR2(255), 
	"C3" NVARCHAR2(255), 
	"C4" NVARCHAR2(255), 
	"C5" NVARCHAR2(255), 
	"C6" NVARCHAR2(255), 
	"C7" NVARCHAR2(255), 
	"WORKCODE" NVARCHAR2(255)
   ) ;
--------------------------------------------------------
--  DDL for Table DEVICELOGS_PROCESSED
--------------------------------------------------------

  CREATE TABLE "DEVICELOGS_PROCESSED" 
   (	"DEVICELOGID" NUMBER(10,0), 
	"DOWNLOADDATE" DATE, 
	"DEVICEID" NUMBER(10,0), 
	"USERID" NVARCHAR2(50), 
	"LOGDATE" DATE, 
	"DIRECTION" NVARCHAR2(255), 
	"ATTDIRECTION" NVARCHAR2(255), 
	"C1" NVARCHAR2(255), 
	"C2" NVARCHAR2(255), 
	"C3" NVARCHAR2(255), 
	"C4" NVARCHAR2(255), 
	"C5" NVARCHAR2(255), 
	"C6" NVARCHAR2(255), 
	"C7" NVARCHAR2(255), 
	"WORKCODE" NVARCHAR2(255)
   ) ;
--------------------------------------------------------
--  DDL for Table DEVICELOGSINFOBL
--------------------------------------------------------

  CREATE TABLE "DEVICELOGSINFOBL" 
   (	"DEVICELOGID" NUMBER(10,0), 
	"DOWNLOADDATE" DATE, 
	"DEVICEID" NUMBER(10,0), 
	"LOGDATE" DATE
   ) ;
--------------------------------------------------------
--  DDL for Table DEVICEOPERATIONLOGS
--------------------------------------------------------

  CREATE TABLE "DEVICEOPERATIONLOGS" 
   (	"DEVICEOPERATIONLOGID" NUMBER(10,0), 
	"DEVICEOPERATIONLOGCODE" NUMBER(10,0), 
	"DEVICEOPERATIONLOGEXECUTEDON" DATE, 
	"SERIALNUMBER" NVARCHAR2(255)
   ) ;
--------------------------------------------------------
--  DDL for Table DEVICEOPERATIONLOGTYPES
--------------------------------------------------------

  CREATE TABLE "DEVICEOPERATIONLOGTYPES" 
   (	"OPERATIONLOGTYPEID" NUMBER(10,0), 
	"OPERATIONLOGTYPECODE" NUMBER(10,0), 
	"OPERATIONLOGTYPENAME" NVARCHAR2(255)
   ) ;
--------------------------------------------------------
--  DDL for Table DEVICES
--------------------------------------------------------

  CREATE TABLE "DEVICES" 
   (	"DEVICEID" NUMBER(10,0), 
	"DEVICEFNAME" NVARCHAR2(255), 
	"DEVICESNAME" NVARCHAR2(255), 
	"DEVICEDIRECTION" NVARCHAR2(255), 
	"SERIALNUMBER" NVARCHAR2(255), 
	"CONNECTIONTYPE" NVARCHAR2(255), 
	"IPADDRESS" NVARCHAR2(255), 
	"BAUDRATE" NVARCHAR2(255), 
	"COMMKEY" NVARCHAR2(255), 
	"COMPORT" NVARCHAR2(255), 
	"LASTLOGDOWNLOADDATE" TIMESTAMP (6), 
	"C1" NVARCHAR2(255), 
	"C2" NVARCHAR2(255), 
	"C3" NVARCHAR2(255), 
	"C4" NVARCHAR2(255), 
	"C5" NVARCHAR2(255), 
	"C6" NVARCHAR2(255), 
	"C7" NVARCHAR2(255), 
	"TRANSACTIONSTAMP" NVARCHAR2(255), 
	"LASTPING" TIMESTAMP (6), 
	"DEVICETYPE" NVARCHAR2(255), 
	"OPSTAMP" NVARCHAR2(255), 
	"DOWNLOADTYPE" NUMBER(10,0), 
	"TIMEZONE" NVARCHAR2(255), 
	"DEVICELOCATION" NVARCHAR2(255), 
	"TIMEOUT" NVARCHAR2(255)
   ) ;
--------------------------------------------------------
--  DDL for Table EMPLOYEES
--------------------------------------------------------

  CREATE TABLE "EMPLOYEES" 
   (	"EMPLOYEEID" NUMBER(10,0), 
	"EMPLOYEENAME" NVARCHAR2(50), 
	"EMPLOYEECODE" NVARCHAR2(50), 
	"STRINGCODE" NVARCHAR2(50), 
	"NUMERICCODE" NUMBER(10,0), 
	"GENDER" NVARCHAR2(255), 
	"COMPANYID" NUMBER(10,0), 
	"DEPARTMENTID" NUMBER(10,0), 
	"DESIGNATION" NVARCHAR2(255), 
	"CATEGORYID" NUMBER(10,0), 
	"DOJ" DATE, 
	"DOR" DATE, 
	"DOC" DATE, 
	"EMPLOYEECODEINDEVICE" NVARCHAR2(50), 
	"EMPLOYEERFIDNUMBER" NVARCHAR2(255), 
	"EMPLOYEMENTTYPE" NVARCHAR2(255), 
	"STATUS" NVARCHAR2(255), 
	"EMPLOYEEDEVICEPASSWORD" NVARCHAR2(50), 
	"EMPLOYEEDEVICEGROUP" NVARCHAR2(50), 
	"FATHERNAME" NVARCHAR2(255), 
	"MOTHERNAME" NVARCHAR2(255), 
	"RESIDENTIALADDRESS" NVARCHAR2(255), 
	"PERMANENTADDRESS" NVARCHAR2(255), 
	"CONTACTNO" NVARCHAR2(255), 
	"EMAIL" NVARCHAR2(255), 
	"DOB" DATE, 
	"PLACEOFBIRTH" NVARCHAR2(255), 
	"NOMENEE1" NVARCHAR2(255), 
	"NOMENEE2" NVARCHAR2(255), 
	"REMARKS" CLOB, 
	"RECORDSTATUS" NUMBER(10,0), 
	"C1" NVARCHAR2(255), 
	"C2" NVARCHAR2(255), 
	"C3" NVARCHAR2(255), 
	"C4" NVARCHAR2(255), 
	"C5" NVARCHAR2(255), 
	"C6" NVARCHAR2(255), 
	"C7" NVARCHAR2(255), 
	"LOCATION" NVARCHAR2(255), 
	"BLOODGROUP" NVARCHAR2(255), 
	"WORKPLACE" NVARCHAR2(255), 
	"EXTENSIONNO" NVARCHAR2(255), 
	"LOGINNAME" NVARCHAR2(255), 
	"LOGINPASSWORD" NVARCHAR2(255), 
	"GRADE" NVARCHAR2(255), 
	"TEAM" NVARCHAR2(255), 
	"ISRECIEVENOTIFICATION" NUMBER(10,0), 
	"HOLIDAYGROUP" NUMBER(10,0), 
	"SHIFTGROUPID" NUMBER(10,0), 
	"SHIFTROSTERID" NUMBER(10,0), 
	"LASTMODIFIEDBY" NVARCHAR2(50)
   ) ;
--------------------------------------------------------
--  DDL for Table EMPLOYEESBIO
--------------------------------------------------------

  CREATE TABLE "EMPLOYEESBIO" 
   (	"EMPLOYEEBIOID" NUMBER(10,0), 
	"EMPLOYEEID" NUMBER(10,0), 
	"BIOTYPE" NVARCHAR2(50), 
	"BIOVERSION" NVARCHAR2(50), 
	"BIOINDEX" NUMBER(10,0), 
	"BIOID" NUMBER(10,0), 
	"BIO" CLOB, 
	"BIOFORMATID" NUMBER(10,0)
   ) ;
--------------------------------------------------------
--  DDL for Table TIMEZONE
--------------------------------------------------------

  CREATE TABLE "TIMEZONE" 
   (	"TIMEZONEID" NUMBER(10,0), 
	"NAME" NVARCHAR2(255), 
	"DESCRIPTION" NVARCHAR2(255), 
	"SUNSTART" NVARCHAR2(20), 
	"SUNEND" NVARCHAR2(20), 
	"MONSTART" NVARCHAR2(20), 
	"MONEND" NVARCHAR2(20), 
	"TUESTART" NVARCHAR2(20), 
	"TUEEND" NVARCHAR2(20), 
	"WEDSTART" NVARCHAR2(20), 
	"WEDEND" NVARCHAR2(20), 
	"THUSTART" NVARCHAR2(20), 
	"THUEND" NVARCHAR2(20), 
	"FRISTART" NVARCHAR2(20), 
	"FRIEND" NVARCHAR2(20), 
	"SATSTART" NVARCHAR2(20), 
	"SATEND" NVARCHAR2(20), 
	"LASTMODIFIEDDATE" DATE
   ) ;
--------------------------------------------------------
--  DDL for Table USERS
--------------------------------------------------------

  CREATE TABLE "USERS" 
   (	"USERID" NUMBER(10,0), 
	"LOGINNAME" NVARCHAR2(50), 
	"LOGINPASSWORD" NVARCHAR2(50), 
	"ROLENAME" NVARCHAR2(255), 
	"ISADMIN" NUMBER(10,0), 
	"ACCESSI" NUMBER(10,0), 
	"RECORDSTATUS" NUMBER(10,0), 
	"C1" NVARCHAR2(255), 
	"C2" NVARCHAR2(255), 
	"C3" NVARCHAR2(255), 
	"C4" NVARCHAR2(255), 
	"C5" NVARCHAR2(255), 
	"C6" NVARCHAR2(255), 
	"C7" NVARCHAR2(255)
   ) ;
--------------------------------------------------------
--  DDL for Table VERIFICATIONMODE
--------------------------------------------------------

  CREATE TABLE "VERIFICATIONMODE" 
   (	"VERIFYMETHODCODE" NUMBER(10,0), 
	"VERIFYMETHODNAME" NVARCHAR2(255)
   ) ;
--------------------------------------------------------
--  DDL for Table VERIFICATIONTYPE
--------------------------------------------------------

  CREATE TABLE "VERIFICATIONTYPE" 
   (	"VERIFICATIONTYPEID" NUMBER(10,0), 
	"NAME" NVARCHAR2(255)
   ) ;
REM INSERTING into BIOFORMAT
SET DEFINE OFF;
Insert into BIOFORMAT (BIOFORMATID,BIOFORMAT) values (0,'ES');
Insert into BIOFORMAT (BIOFORMATID,BIOFORMAT) values (1,'ISO');
Insert into BIOFORMAT (BIOFORMATID,BIOFORMAT) values (2,'ANSI');
REM INSERTING into BIOTYPE
SET DEFINE OFF;
Insert into BIOTYPE (BIOTYPEID,BIOTYPE) values (0,'UserPic');
Insert into BIOTYPE (BIOTYPEID,BIOTYPE) values (1,'Fingerprint');
Insert into BIOTYPE (BIOTYPEID,BIOTYPE) values (2,'Face');
Insert into BIOTYPE (BIOTYPEID,BIOTYPE) values (3,'Voiceprint');
Insert into BIOTYPE (BIOTYPEID,BIOTYPE) values (4,'Iris');
Insert into BIOTYPE (BIOTYPEID,BIOTYPE) values (5,'Retina');
Insert into BIOTYPE (BIOTYPEID,BIOTYPE) values (6,'Palmprint');
Insert into BIOTYPE (BIOTYPEID,BIOTYPE) values (7,'Fingervein');
Insert into BIOTYPE (BIOTYPEID,BIOTYPE) values (8,'Palm');
REM INSERTING into COMMANDS
SET DEFINE OFF;
REM INSERTING into DEVICECOMMANDS
SET DEFINE OFF;
REM INSERTING into DEVICEERRORMESSAGES
SET DEFINE OFF;
REM INSERTING into DEVICEGROUP
SET DEFINE OFF;
Insert into DEVICEGROUP (DEVICEGROUPID,NAME,DESCRIPTION,VERIFICATIONTYPEID,LASTMODIFIEDDATE) values (1,'DeviceGroup 01','DeviceGroup 01',0,to_date('01-01-70','DD-MM-RR'));
Insert into DEVICEGROUP (DEVICEGROUPID,NAME,DESCRIPTION,VERIFICATIONTYPEID,LASTMODIFIEDDATE) values (2,'DeviceGroup 02','DeviceGroup 02',0,to_date('01-01-70','DD-MM-RR'));
Insert into DEVICEGROUP (DEVICEGROUPID,NAME,DESCRIPTION,VERIFICATIONTYPEID,LASTMODIFIEDDATE) values (3,'DeviceGroup 03','DeviceGroup 03',0,to_date('01-01-70','DD-MM-RR'));
Insert into DEVICEGROUP (DEVICEGROUPID,NAME,DESCRIPTION,VERIFICATIONTYPEID,LASTMODIFIEDDATE) values (4,'DeviceGroup 04','DeviceGroup 04',0,to_date('01-01-70','DD-MM-RR'));
Insert into DEVICEGROUP (DEVICEGROUPID,NAME,DESCRIPTION,VERIFICATIONTYPEID,LASTMODIFIEDDATE) values (5,'DeviceGroup 05','DeviceGroup 05',0,to_date('01-01-70','DD-MM-RR'));
Insert into DEVICEGROUP (DEVICEGROUPID,NAME,DESCRIPTION,VERIFICATIONTYPEID,LASTMODIFIEDDATE) values (6,'DeviceGroup 06','DeviceGroup 06',0,to_date('01-01-70','DD-MM-RR'));
Insert into DEVICEGROUP (DEVICEGROUPID,NAME,DESCRIPTION,VERIFICATIONTYPEID,LASTMODIFIEDDATE) values (7,'DeviceGroup 07','DeviceGroup 07',0,to_date('01-01-70','DD-MM-RR'));
Insert into DEVICEGROUP (DEVICEGROUPID,NAME,DESCRIPTION,VERIFICATIONTYPEID,LASTMODIFIEDDATE) values (8,'DeviceGroup 08','DeviceGroup 08',0,to_date('01-01-70','DD-MM-RR'));
Insert into DEVICEGROUP (DEVICEGROUPID,NAME,DESCRIPTION,VERIFICATIONTYPEID,LASTMODIFIEDDATE) values (9,'DeviceGroup 09','DeviceGroup 09',0,to_date('01-01-70','DD-MM-RR'));
Insert into DEVICEGROUP (DEVICEGROUPID,NAME,DESCRIPTION,VERIFICATIONTYPEID,LASTMODIFIEDDATE) values (10,'DeviceGroup 10','DeviceGroup 10',0,to_date('01-01-70','DD-MM-RR'));
REM INSERTING into DEVICELOGS
SET DEFINE OFF;
REM INSERTING into DEVICELOGS_PROCESSED
SET DEFINE OFF;
REM INSERTING into DEVICELOGSINFOBL
SET DEFINE OFF;
REM INSERTING into DEVICEOPERATIONLOGS
SET DEFINE OFF;
REM INSERTING into DEVICEOPERATIONLOGTYPES
SET DEFINE OFF;
Insert into DEVICEOPERATIONLOGTYPES (OPERATIONLOGTYPEID,OPERATIONLOGTYPECODE,OPERATIONLOGTYPENAME) values (1,0,'Power On');
Insert into DEVICEOPERATIONLOGTYPES (OPERATIONLOGTYPEID,OPERATIONLOGTYPECODE,OPERATIONLOGTYPENAME) values (2,1,'Power Off');
Insert into DEVICEOPERATIONLOGTYPES (OPERATIONLOGTYPEID,OPERATIONLOGTYPECODE,OPERATIONLOGTYPENAME) values (3,2,'The Authentication is Failed');
Insert into DEVICEOPERATIONLOGTYPES (OPERATIONLOGTYPEID,OPERATIONLOGTYPECODE,OPERATIONLOGTYPENAME) values (4,3,'Alarm');
Insert into DEVICEOPERATIONLOGTYPES (OPERATIONLOGTYPEID,OPERATIONLOGTYPECODE,OPERATIONLOGTYPENAME) values (5,4,'Enter into the Main Menu');
Insert into DEVICEOPERATIONLOGTYPES (OPERATIONLOGTYPEID,OPERATIONLOGTYPECODE,OPERATIONLOGTYPENAME) values (6,5,'Change The Setting');
Insert into DEVICEOPERATIONLOGTYPES (OPERATIONLOGTYPEID,OPERATIONLOGTYPECODE,OPERATIONLOGTYPENAME) values (7,6,'Enroll a FingerPrint');
Insert into DEVICEOPERATIONLOGTYPES (OPERATIONLOGTYPEID,OPERATIONLOGTYPECODE,OPERATIONLOGTYPENAME) values (8,7,'Enroll a Password');
Insert into DEVICEOPERATIONLOGTYPES (OPERATIONLOGTYPEID,OPERATIONLOGTYPECODE,OPERATIONLOGTYPENAME) values (9,8,'Enroll a HID Card');
Insert into DEVICEOPERATIONLOGTYPES (OPERATIONLOGTYPEID,OPERATIONLOGTYPECODE,OPERATIONLOGTYPENAME) values (10,9,'Delete a User');
Insert into DEVICEOPERATIONLOGTYPES (OPERATIONLOGTYPEID,OPERATIONLOGTYPECODE,OPERATIONLOGTYPENAME) values (11,10,'Delete a FingerPrint');
Insert into DEVICEOPERATIONLOGTYPES (OPERATIONLOGTYPEID,OPERATIONLOGTYPECODE,OPERATIONLOGTYPENAME) values (12,11,'Delete a Password');
Insert into DEVICEOPERATIONLOGTYPES (OPERATIONLOGTYPEID,OPERATIONLOGTYPECODE,OPERATIONLOGTYPENAME) values (13,12,'Delete a RFID Card');
Insert into DEVICEOPERATIONLOGTYPES (OPERATIONLOGTYPEID,OPERATIONLOGTYPECODE,OPERATIONLOGTYPENAME) values (14,13,'Clear the Data');
Insert into DEVICEOPERATIONLOGTYPES (OPERATIONLOGTYPEID,OPERATIONLOGTYPECODE,OPERATIONLOGTYPENAME) values (15,14,'Create a MF Card');
Insert into DEVICEOPERATIONLOGTYPES (OPERATIONLOGTYPEID,OPERATIONLOGTYPECODE,OPERATIONLOGTYPENAME) values (16,15,'Enroll a MF Card');
Insert into DEVICEOPERATIONLOGTYPES (OPERATIONLOGTYPEID,OPERATIONLOGTYPECODE,OPERATIONLOGTYPENAME) values (17,16,'Register  a MF Card');
Insert into DEVICEOPERATIONLOGTYPES (OPERATIONLOGTYPEID,OPERATIONLOGTYPECODE,OPERATIONLOGTYPENAME) values (18,17,'Delete The Registration of MF Card');
Insert into DEVICEOPERATIONLOGTYPES (OPERATIONLOGTYPEID,OPERATIONLOGTYPECODE,OPERATIONLOGTYPENAME) values (19,18,'Clear the MF Cards Content');
Insert into DEVICEOPERATIONLOGTYPES (OPERATIONLOGTYPEID,OPERATIONLOGTYPECODE,OPERATIONLOGTYPENAME) values (20,19,'Move The Enroll Data into Card');
Insert into DEVICEOPERATIONLOGTYPES (OPERATIONLOGTYPEID,OPERATIONLOGTYPECODE,OPERATIONLOGTYPENAME) values (21,20,'Coyp The Data in The Card to The Machine');
Insert into DEVICEOPERATIONLOGTYPES (OPERATIONLOGTYPEID,OPERATIONLOGTYPECODE,OPERATIONLOGTYPENAME) values (22,21,'Set The Time');
Insert into DEVICEOPERATIONLOGTYPES (OPERATIONLOGTYPEID,OPERATIONLOGTYPECODE,OPERATIONLOGTYPENAME) values (23,22,'Factory Setting');
Insert into DEVICEOPERATIONLOGTYPES (OPERATIONLOGTYPEID,OPERATIONLOGTYPECODE,OPERATIONLOGTYPENAME) values (24,23,'Delete The In And Out Record');
Insert into DEVICEOPERATIONLOGTYPES (OPERATIONLOGTYPEID,OPERATIONLOGTYPECODE,OPERATIONLOGTYPENAME) values (25,24,'Clear The Administrator Privilege');
Insert into DEVICEOPERATIONLOGTYPES (OPERATIONLOGTYPEID,OPERATIONLOGTYPECODE,OPERATIONLOGTYPENAME) values (26,25,'Modify The Setting of Access Control Group');
Insert into DEVICEOPERATIONLOGTYPES (OPERATIONLOGTYPEID,OPERATIONLOGTYPECODE,OPERATIONLOGTYPENAME) values (27,26,'Modify The Setting Of User Access Control');
Insert into DEVICEOPERATIONLOGTYPES (OPERATIONLOGTYPEID,OPERATIONLOGTYPECODE,OPERATIONLOGTYPENAME) values (28,27,'Modify The Time Field Of Access Control');
Insert into DEVICEOPERATIONLOGTYPES (OPERATIONLOGTYPEID,OPERATIONLOGTYPECODE,OPERATIONLOGTYPENAME) values (29,28,'Modify The Setting Of Unclock Combination');
Insert into DEVICEOPERATIONLOGTYPES (OPERATIONLOGTYPEID,OPERATIONLOGTYPECODE,OPERATIONLOGTYPENAME) values (30,29,'Unclock');
Insert into DEVICEOPERATIONLOGTYPES (OPERATIONLOGTYPEID,OPERATIONLOGTYPECODE,OPERATIONLOGTYPENAME) values (31,30,'Enroll a User');
Insert into DEVICEOPERATIONLOGTYPES (OPERATIONLOGTYPEID,OPERATIONLOGTYPECODE,OPERATIONLOGTYPENAME) values (32,31,'Change The Finger Prints Attribute');
Insert into DEVICEOPERATIONLOGTYPES (OPERATIONLOGTYPEID,OPERATIONLOGTYPECODE,OPERATIONLOGTYPENAME) values (33,32,'Duress Alarm');
REM INSERTING into DEVICES
SET DEFINE OFF;
REM INSERTING into EMPLOYEES
SET DEFINE OFF;
REM INSERTING into EMPLOYEESBIO
SET DEFINE OFF;
REM INSERTING into TIMEZONE
SET DEFINE OFF;
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (1,'TimeZone 01','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (2,'TimeZone 02','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (3,'TimeZone 03','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (4,'TimeZone 04','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (5,'TimeZone 05','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (6,'TimeZone 06','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (7,'TimeZone 07','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (8,'TimeZone 08','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (9,'TimeZone 09','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (10,'TimeZone 10','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (11,'TimeZone 11','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (13,'TimeZone 13','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (14,'TimeZone 14','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (15,'TimeZone 15','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (16,'TimeZone 16','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (17,'TimeZone 17','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (18,'TimeZone 18','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (19,'TimeZone 19','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (20,'TimeZone 20','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (22,'TimeZone 22','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (23,'TimeZone 23','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (24,'TimeZone 24','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (25,'TimeZone 25','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (26,'TimeZone 26','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (27,'TimeZone 27','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (28,'TimeZone 28','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (29,'TimeZone 29','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (30,'TimeZone 30','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (32,'TimeZone 32','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (33,'TimeZone 33','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (34,'TimeZone 34','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (35,'TimeZone 35','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (36,'TimeZone 36','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (37,'TimeZone 37','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (38,'TimeZone 38','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (39,'TimeZone 39','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (40,'TimeZone 40','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (41,'TimeZone 41','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (42,'TimeZone 42','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (44,'TimeZone 44','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (45,'TimeZone 45','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (46,'TimeZone 46','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (47,'TimeZone 47','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (48,'TimeZone 48','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (49,'TimeZone 49','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (50,'TimeZone 50','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (43,'TimeZone 43','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (31,'TimeZone 31','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (21,'TimeZone 21','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
Insert into TIMEZONE (TIMEZONEID,NAME,DESCRIPTION,SUNSTART,SUNEND,MONSTART,MONEND,TUESTART,TUEEND,WEDSTART,WEDEND,THUSTART,THUEND,FRISTART,FRIEND,SATSTART,SATEND,LASTMODIFIEDDATE) values (12,'TimeZone 12','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000','0000',to_date('01-01-70','DD-MM-RR'));
REM INSERTING into USERS
SET DEFINE OFF;
Insert into USERS (USERID,LOGINNAME,LOGINPASSWORD,ROLENAME,ISADMIN,ACCESSI,RECORDSTATUS,C1,C2,C3,C4,C5,C6,C7) values (1,'root','63A9F0EA7BB98050796B649E85481845','Admin',1,1,1,null,null,null,null,'1','1','2017-12-28 15:55:06');
REM INSERTING into VERIFICATIONMODE
SET DEFINE OFF;
Insert into VERIFICATIONMODE (VERIFYMETHODCODE,VERIFYMETHODNAME) values (0,'VS_FP_OR_PW_OR_RF_OR_FACE');
Insert into VERIFICATIONMODE (VERIFYMETHODCODE,VERIFYMETHODNAME) values (1,'VS_FP');
Insert into VERIFICATIONMODE (VERIFYMETHODCODE,VERIFYMETHODNAME) values (2,'VS_PIN');
Insert into VERIFICATIONMODE (VERIFYMETHODCODE,VERIFYMETHODNAME) values (3,'VS_PW');
Insert into VERIFICATIONMODE (VERIFYMETHODCODE,VERIFYMETHODNAME) values (4,'VS_RF');
Insert into VERIFICATIONMODE (VERIFYMETHODCODE,VERIFYMETHODNAME) values (5,'VS_FP_OR_PW');
Insert into VERIFICATIONMODE (VERIFYMETHODCODE,VERIFYMETHODNAME) values (6,'VS_FP_OR_RF');
Insert into VERIFICATIONMODE (VERIFYMETHODCODE,VERIFYMETHODNAME) values (7,'VS_PW_OR_RF');
Insert into VERIFICATIONMODE (VERIFYMETHODCODE,VERIFYMETHODNAME) values (8,'VS_PIN_AND_FP');
Insert into VERIFICATIONMODE (VERIFYMETHODCODE,VERIFYMETHODNAME) values (9,'VS_FP_AND_PW');
Insert into VERIFICATIONMODE (VERIFYMETHODCODE,VERIFYMETHODNAME) values (10,'VS_FP_AND_RF');
Insert into VERIFICATIONMODE (VERIFYMETHODCODE,VERIFYMETHODNAME) values (11,'VS_PW_AND_RF');
Insert into VERIFICATIONMODE (VERIFYMETHODCODE,VERIFYMETHODNAME) values (12,'VS_FP_AND_PW_AND_RF');
Insert into VERIFICATIONMODE (VERIFYMETHODCODE,VERIFYMETHODNAME) values (13,'VS_PIN_AND_FP_AND_PW');
Insert into VERIFICATIONMODE (VERIFYMETHODCODE,VERIFYMETHODNAME) values (14,'VS_FP_AND_RF_OR_PIN');
Insert into VERIFICATIONMODE (VERIFYMETHODCODE,VERIFYMETHODNAME) values (15,'VS_FACE');
Insert into VERIFICATIONMODE (VERIFYMETHODCODE,VERIFYMETHODNAME) values (16,'VS_FACE_AND_FP');
Insert into VERIFICATIONMODE (VERIFYMETHODCODE,VERIFYMETHODNAME) values (17,'VS_FACE_AND_PW');
Insert into VERIFICATIONMODE (VERIFYMETHODCODE,VERIFYMETHODNAME) values (18,'VS_FACE_AND_RF');
Insert into VERIFICATIONMODE (VERIFYMETHODCODE,VERIFYMETHODNAME) values (19,'VS_FACE_AND_FP_AND_RF');
Insert into VERIFICATIONMODE (VERIFYMETHODCODE,VERIFYMETHODNAME) values (20,'VS_FACE_AND_FP_AND_PW');
Insert into VERIFICATIONMODE (VERIFYMETHODCODE,VERIFYMETHODNAME) values (21,'VS_OTHER');
Insert into VERIFICATIONMODE (VERIFYMETHODCODE,VERIFYMETHODNAME) values (22,'VS_NUM');
Insert into VERIFICATIONMODE (VERIFYMETHODCODE,VERIFYMETHODNAME) values (25,'VS_PALM');
Insert into VERIFICATIONMODE (VERIFYMETHODCODE,VERIFYMETHODNAME) values (101,'VS_FP');
Insert into VERIFICATIONMODE (VERIFYMETHODCODE,VERIFYMETHODNAME) values (102,'VS_RF');
REM INSERTING into VERIFICATIONTYPE
SET DEFINE OFF;
Insert into VERIFICATIONTYPE (VERIFICATIONTYPEID,NAME) values (0,'Fingerprint or Password or Badge');
Insert into VERIFICATIONTYPE (VERIFICATIONTYPEID,NAME) values (1,'Fingerprint Only');
Insert into VERIFICATIONTYPE (VERIFICATIONTYPEID,NAME) values (2,'EmployeeCode Only');
Insert into VERIFICATIONTYPE (VERIFICATIONTYPEID,NAME) values (3,'Password Only');
Insert into VERIFICATIONTYPE (VERIFICATIONTYPEID,NAME) values (4,'Badge Only');
Insert into VERIFICATIONTYPE (VERIFICATIONTYPEID,NAME) values (5,'Fingerprint or Password');
Insert into VERIFICATIONTYPE (VERIFICATIONTYPEID,NAME) values (6,'Fingerprint or Badge');
Insert into VERIFICATIONTYPE (VERIFICATIONTYPEID,NAME) values (7,'Password or Badge');
Insert into VERIFICATIONTYPE (VERIFICATIONTYPEID,NAME) values (8,'EmployeeCode And Fingerprint');
Insert into VERIFICATIONTYPE (VERIFICATIONTYPEID,NAME) values (9,'Fingerprint And Password');
Insert into VERIFICATIONTYPE (VERIFICATIONTYPEID,NAME) values (10,'Fingerprint And Badge');
Insert into VERIFICATIONTYPE (VERIFICATIONTYPEID,NAME) values (11,'Password And Badge');
Insert into VERIFICATIONTYPE (VERIFICATIONTYPEID,NAME) values (12,'Fingerprint And Password And Badge');
Insert into VERIFICATIONTYPE (VERIFICATIONTYPEID,NAME) values (13,'EmployeeCode And Fingerprint And Password');
Insert into VERIFICATIONTYPE (VERIFICATIONTYPEID,NAME) values (14,'Fingerprint And Badge And EmployeeCode');
--------------------------------------------------------
--  DDL for Index BIOFORMAT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "BIOFORMAT_PK" ON "BIOFORMAT" ("BIOFORMATID", "BIOFORMAT") 
  ;
--------------------------------------------------------
--  DDL for Index BIOTYPE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "BIOTYPE_PK" ON "BIOTYPE" ("BIOTYPEID", "BIOTYPE") 
  ;
--------------------------------------------------------
--  DDL for Index DEVICECOMMANDS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "DEVICECOMMANDS_PK" ON "DEVICECOMMANDS" ("DEVICECOMMANDID", "SERIALNUMBER") 
  ;
--------------------------------------------------------
--  DDL for Index DEVICEERRORMESSAGES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "DEVICEERRORMESSAGES_PK" ON "DEVICEERRORMESSAGES" ("DEVICEERRORMESSAGEID", "SERIALNUMBER") 
  ;
--------------------------------------------------------
--  DDL for Index DEVICEGROUP_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "DEVICEGROUP_PK" ON "DEVICEGROUP" ("DEVICEGROUPID") 
  ;
--------------------------------------------------------
--  DDL for Index DEVICELOGSINFOBL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "DEVICELOGSINFOBL_PK" ON "DEVICELOGSINFOBL" ("DEVICEID", "LOGDATE") 
  ;
--------------------------------------------------------
--  DDL for Index DEVICEOPERATIONLOGS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "DEVICEOPERATIONLOGS_PK" ON "DEVICEOPERATIONLOGS" ("DEVICEOPERATIONLOGID", "DEVICEOPERATIONLOGEXECUTEDON", "SERIALNUMBER") 
  ;
--------------------------------------------------------
--  DDL for Index DEVICES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "DEVICES_PK" ON "DEVICES" ("DEVICEID", "SERIALNUMBER") 
  ;
--------------------------------------------------------
--  DDL for Index EMPLOYEES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "EMPLOYEES_PK" ON "EMPLOYEES" ("EMPLOYEECODE") 
  ;
--------------------------------------------------------
--  DDL for Index EMPLOYEESBIO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "EMPLOYEESBIO_PK" ON "EMPLOYEESBIO" ("BIOFORMATID", "BIOID", "BIOINDEX", "BIOTYPE", "EMPLOYEEID") 
  ;
--------------------------------------------------------
--  DDL for Index TIMEZONE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TIMEZONE_PK" ON "TIMEZONE" ("TIMEZONEID") 
  ;
--------------------------------------------------------
--  DDL for Index USERS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "USERS_PK" ON "USERS" ("LOGINNAME") 
  ;
--------------------------------------------------------
--  DDL for Index VERIFICATIONMODE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "VERIFICATIONMODE_PK" ON "VERIFICATIONMODE" ("VERIFYMETHODCODE", "VERIFYMETHODNAME") 
  ;
--------------------------------------------------------
--  DDL for Index VERIFICATIONTYPE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "VERIFICATIONTYPE_PK" ON "VERIFICATIONTYPE" ("VERIFICATIONTYPEID", "NAME") 
  ;
--------------------------------------------------------
--  Constraints for Table BIOFORMAT
--------------------------------------------------------

  ALTER TABLE "BIOFORMAT" ADD CONSTRAINT "BIOFORMAT_PK" PRIMARY KEY ("BIOFORMATID", "BIOFORMAT") ENABLE;
 
  ALTER TABLE "BIOFORMAT" MODIFY ("BIOFORMATID" NOT NULL ENABLE);
 
  ALTER TABLE "BIOFORMAT" MODIFY ("BIOFORMAT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table BIOTYPE
--------------------------------------------------------

  ALTER TABLE "BIOTYPE" ADD CONSTRAINT "BIOTYPE_PK" PRIMARY KEY ("BIOTYPEID", "BIOTYPE") ENABLE;
 
  ALTER TABLE "BIOTYPE" MODIFY ("BIOTYPEID" NOT NULL ENABLE);
 
  ALTER TABLE "BIOTYPE" MODIFY ("BIOTYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table COMMANDS
--------------------------------------------------------

  ALTER TABLE "COMMANDS" MODIFY ("COMMANDID" NOT NULL ENABLE);
 
  ALTER TABLE "COMMANDS" MODIFY ("COMMANDTYPEID" NOT NULL ENABLE);
 
  ALTER TABLE "COMMANDS" MODIFY ("DEVICEID" NOT NULL ENABLE);
 
  ALTER TABLE "COMMANDS" MODIFY ("EMPLOYEEID" NOT NULL ENABLE);
 
  ALTER TABLE "COMMANDS" MODIFY ("BIOID" NOT NULL ENABLE);
 
  ALTER TABLE "COMMANDS" MODIFY ("STATUS" NOT NULL ENABLE);
 
  ALTER TABLE "COMMANDS" MODIFY ("CREATEDBY" NOT NULL ENABLE);
 
  ALTER TABLE "COMMANDS" MODIFY ("CREATEDON" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DEVICECOMMANDS
--------------------------------------------------------

  ALTER TABLE "DEVICECOMMANDS" ADD CONSTRAINT "DEVICECOMMANDS_PK" PRIMARY KEY ("DEVICECOMMANDID", "SERIALNUMBER") ENABLE;
 
  ALTER TABLE "DEVICECOMMANDS" MODIFY ("DEVICECOMMANDID" NOT NULL ENABLE);
 
  ALTER TABLE "DEVICECOMMANDS" MODIFY ("SERIALNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "DEVICECOMMANDS" MODIFY ("DEVICECOMMAND" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DEVICEERRORMESSAGES
--------------------------------------------------------

  ALTER TABLE "DEVICEERRORMESSAGES" ADD CONSTRAINT "DEVICEERRORMESSAGES_PK" PRIMARY KEY ("DEVICEERRORMESSAGEID", "SERIALNUMBER") ENABLE;
 
  ALTER TABLE "DEVICEERRORMESSAGES" MODIFY ("DEVICEERRORMESSAGEID" NOT NULL ENABLE);
 
  ALTER TABLE "DEVICEERRORMESSAGES" MODIFY ("SERIALNUMBER" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DEVICEGROUP
--------------------------------------------------------

  ALTER TABLE "DEVICEGROUP" ADD CONSTRAINT "DEVICEGROUP_PK" PRIMARY KEY ("DEVICEGROUPID") ENABLE;
 
  ALTER TABLE "DEVICEGROUP" MODIFY ("DEVICEGROUPID" NOT NULL ENABLE);
 
  ALTER TABLE "DEVICEGROUP" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "DEVICEGROUP" MODIFY ("VERIFICATIONTYPEID" NOT NULL ENABLE);
 
  ALTER TABLE "DEVICEGROUP" MODIFY ("LASTMODIFIEDDATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DEVICELOGS
--------------------------------------------------------

  ALTER TABLE "DEVICELOGS" MODIFY ("DEVICELOGID" NOT NULL ENABLE);
 
  ALTER TABLE "DEVICELOGS" MODIFY ("DEVICEID" NOT NULL ENABLE);
 
  ALTER TABLE "DEVICELOGS" MODIFY ("USERID" NOT NULL ENABLE);
 
  ALTER TABLE "DEVICELOGS" MODIFY ("LOGDATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DEVICELOGS_PROCESSED
--------------------------------------------------------

  ALTER TABLE "DEVICELOGS_PROCESSED" MODIFY ("DEVICELOGID" NOT NULL ENABLE);
 
  ALTER TABLE "DEVICELOGS_PROCESSED" MODIFY ("DEVICEID" NOT NULL ENABLE);
 
  ALTER TABLE "DEVICELOGS_PROCESSED" MODIFY ("USERID" NOT NULL ENABLE);
 
  ALTER TABLE "DEVICELOGS_PROCESSED" MODIFY ("LOGDATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DEVICELOGSINFOBL
--------------------------------------------------------

  ALTER TABLE "DEVICELOGSINFOBL" ADD CONSTRAINT "DEVICELOGSINFOBL_PK" PRIMARY KEY ("DEVICEID", "LOGDATE") ENABLE;
 
  ALTER TABLE "DEVICELOGSINFOBL" MODIFY ("DEVICELOGID" NOT NULL ENABLE);
 
  ALTER TABLE "DEVICELOGSINFOBL" MODIFY ("DEVICEID" NOT NULL ENABLE);
 
  ALTER TABLE "DEVICELOGSINFOBL" MODIFY ("LOGDATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DEVICEOPERATIONLOGS
--------------------------------------------------------

  ALTER TABLE "DEVICEOPERATIONLOGS" ADD CONSTRAINT "DEVICEOPERATIONLOGS_PK" PRIMARY KEY ("DEVICEOPERATIONLOGID", "DEVICEOPERATIONLOGEXECUTEDON", "SERIALNUMBER") ENABLE;
 
  ALTER TABLE "DEVICEOPERATIONLOGS" MODIFY ("DEVICEOPERATIONLOGID" NOT NULL ENABLE);
 
  ALTER TABLE "DEVICEOPERATIONLOGS" MODIFY ("DEVICEOPERATIONLOGEXECUTEDON" NOT NULL ENABLE);
 
  ALTER TABLE "DEVICEOPERATIONLOGS" MODIFY ("SERIALNUMBER" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DEVICEOPERATIONLOGTYPES
--------------------------------------------------------

  ALTER TABLE "DEVICEOPERATIONLOGTYPES" MODIFY ("OPERATIONLOGTYPEID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DEVICES
--------------------------------------------------------

  ALTER TABLE "DEVICES" ADD CONSTRAINT "DEVICES_PK" PRIMARY KEY ("DEVICEID", "SERIALNUMBER") ENABLE;
 
  ALTER TABLE "DEVICES" MODIFY ("DEVICEID" NOT NULL ENABLE);
 
  ALTER TABLE "DEVICES" MODIFY ("DEVICEFNAME" NOT NULL ENABLE);
 
  ALTER TABLE "DEVICES" MODIFY ("DEVICESNAME" NOT NULL ENABLE);
 
  ALTER TABLE "DEVICES" MODIFY ("SERIALNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "DEVICES" MODIFY ("COMMKEY" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table EMPLOYEES
--------------------------------------------------------

  ALTER TABLE "EMPLOYEES" ADD CONSTRAINT "EMPLOYEES_PK" PRIMARY KEY ("EMPLOYEECODE") ENABLE;
 
  ALTER TABLE "EMPLOYEES" MODIFY ("EMPLOYEEID" NOT NULL ENABLE);
 
  ALTER TABLE "EMPLOYEES" MODIFY ("EMPLOYEENAME" NOT NULL ENABLE);
 
  ALTER TABLE "EMPLOYEES" MODIFY ("EMPLOYEECODE" NOT NULL ENABLE);
 
  ALTER TABLE "EMPLOYEES" MODIFY ("NUMERICCODE" NOT NULL ENABLE);
 
  ALTER TABLE "EMPLOYEES" MODIFY ("GENDER" NOT NULL ENABLE);
 
  ALTER TABLE "EMPLOYEES" MODIFY ("COMPANYID" NOT NULL ENABLE);
 
  ALTER TABLE "EMPLOYEES" MODIFY ("DEPARTMENTID" NOT NULL ENABLE);
 
  ALTER TABLE "EMPLOYEES" MODIFY ("CATEGORYID" NOT NULL ENABLE);
 
  ALTER TABLE "EMPLOYEES" MODIFY ("EMPLOYEECODEINDEVICE" NOT NULL ENABLE);
 
  ALTER TABLE "EMPLOYEES" MODIFY ("EMPLOYEMENTTYPE" NOT NULL ENABLE);
 
  ALTER TABLE "EMPLOYEES" MODIFY ("STATUS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table EMPLOYEESBIO
--------------------------------------------------------

  ALTER TABLE "EMPLOYEESBIO" ADD CONSTRAINT "EMPLOYEESBIO_PK" PRIMARY KEY ("BIOFORMATID", "BIOID", "BIOINDEX", "BIOTYPE", "EMPLOYEEID") ENABLE;
 
  ALTER TABLE "EMPLOYEESBIO" MODIFY ("EMPLOYEEBIOID" NOT NULL ENABLE);
 
  ALTER TABLE "EMPLOYEESBIO" MODIFY ("EMPLOYEEID" NOT NULL ENABLE);
 
  ALTER TABLE "EMPLOYEESBIO" MODIFY ("BIOTYPE" NOT NULL ENABLE);
 
  ALTER TABLE "EMPLOYEESBIO" MODIFY ("BIOINDEX" NOT NULL ENABLE);
 
  ALTER TABLE "EMPLOYEESBIO" MODIFY ("BIOID" NOT NULL ENABLE);
 
  ALTER TABLE "EMPLOYEESBIO" MODIFY ("BIOFORMATID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TIMEZONE
--------------------------------------------------------

  ALTER TABLE "TIMEZONE" MODIFY ("TIMEZONEID" NOT NULL ENABLE);
 
  ALTER TABLE "TIMEZONE" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "TIMEZONE" MODIFY ("SUNSTART" NOT NULL ENABLE);
 
  ALTER TABLE "TIMEZONE" MODIFY ("SUNEND" NOT NULL ENABLE);
 
  ALTER TABLE "TIMEZONE" MODIFY ("MONSTART" NOT NULL ENABLE);
 
  ALTER TABLE "TIMEZONE" MODIFY ("MONEND" NOT NULL ENABLE);
 
  ALTER TABLE "TIMEZONE" MODIFY ("TUESTART" NOT NULL ENABLE);
 
  ALTER TABLE "TIMEZONE" MODIFY ("TUEEND" NOT NULL ENABLE);
 
  ALTER TABLE "TIMEZONE" MODIFY ("WEDSTART" NOT NULL ENABLE);
 
  ALTER TABLE "TIMEZONE" MODIFY ("WEDEND" NOT NULL ENABLE);
 
  ALTER TABLE "TIMEZONE" MODIFY ("THUSTART" NOT NULL ENABLE);
 
  ALTER TABLE "TIMEZONE" MODIFY ("THUEND" NOT NULL ENABLE);
 
  ALTER TABLE "TIMEZONE" MODIFY ("FRISTART" NOT NULL ENABLE);
 
  ALTER TABLE "TIMEZONE" MODIFY ("FRIEND" NOT NULL ENABLE);
 
  ALTER TABLE "TIMEZONE" MODIFY ("SATSTART" NOT NULL ENABLE);
 
  ALTER TABLE "TIMEZONE" MODIFY ("SATEND" NOT NULL ENABLE);
 
  ALTER TABLE "TIMEZONE" MODIFY ("LASTMODIFIEDDATE" NOT NULL ENABLE);
 
  ALTER TABLE "TIMEZONE" ADD CONSTRAINT "TIMEZONE_PK" PRIMARY KEY ("TIMEZONEID") ENABLE;
--------------------------------------------------------
--  Constraints for Table USERS
--------------------------------------------------------

  ALTER TABLE "USERS" MODIFY ("USERID" NOT NULL ENABLE);
 
  ALTER TABLE "USERS" MODIFY ("LOGINNAME" NOT NULL ENABLE);
 
  ALTER TABLE "USERS" MODIFY ("LOGINPASSWORD" NOT NULL ENABLE);
 
  ALTER TABLE "USERS" MODIFY ("ISADMIN" NOT NULL ENABLE);
 
  ALTER TABLE "USERS" MODIFY ("ACCESSI" NOT NULL ENABLE);
 
  ALTER TABLE "USERS" ADD CONSTRAINT "USERS_PK" PRIMARY KEY ("LOGINNAME") ENABLE;
--------------------------------------------------------
--  Constraints for Table VERIFICATIONMODE
--------------------------------------------------------

  ALTER TABLE "VERIFICATIONMODE" MODIFY ("VERIFYMETHODCODE" NOT NULL ENABLE);
 
  ALTER TABLE "VERIFICATIONMODE" MODIFY ("VERIFYMETHODNAME" NOT NULL ENABLE);
 
  ALTER TABLE "VERIFICATIONMODE" ADD CONSTRAINT "VERIFICATIONMODE_PK" PRIMARY KEY ("VERIFYMETHODCODE", "VERIFYMETHODNAME") ENABLE;
--------------------------------------------------------
--  Constraints for Table VERIFICATIONTYPE
--------------------------------------------------------

  ALTER TABLE "VERIFICATIONTYPE" MODIFY ("VERIFICATIONTYPEID" NOT NULL ENABLE);
 
  ALTER TABLE "VERIFICATIONTYPE" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "VERIFICATIONTYPE" ADD CONSTRAINT "VERIFICATIONTYPE_PK" PRIMARY KEY ("VERIFICATIONTYPEID", "NAME") ENABLE;
--------------------------------------------------------
--  DDL for Trigger COMMANDS_COMMANDID_TRIG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMMANDS_COMMANDID_TRIG" BEFORE INSERT OR UPDATE ON commands
FOR EACH ROW
DECLARE 
v_newVal NUMBER(12) := 0;
v_incval NUMBER(12) := 0;
BEGIN
  IF INSERTING AND :new.CommandId IS NULL THEN
    SELECT  commands_CommandId_2SEQ.NEXTVAL INTO v_newVal FROM DUAL;
    -- If this is the first time this table have been inserted into (sequence == 1)
    IF v_newVal = 1 THEN 
      --get the max indentity value from the table
      SELECT NVL(max(CommandId),0) INTO v_newVal FROM commands;
      v_newVal := v_newVal + 1;
      --set the sequence to that value
      LOOP
           EXIT WHEN v_incval>=v_newVal;
           SELECT commands_CommandId_2SEQ.nextval INTO v_incval FROM dual;
      END LOOP;
    END IF;
   -- assign the value from the sequence to emulate the identity column
   :new.CommandId := v_newVal;
  END IF;
END;
/
ALTER TRIGGER "COMMANDS_COMMANDID_TRIG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DEVICECOMMANDS_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "DEVICECOMMANDS_TRG" 
BEFORE INSERT ON DEVICECOMMANDS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.DEVICECOMMANDID IS NULL THEN
      SELECT DEVICECOMMANDS_SEQ.NEXTVAL INTO :NEW.DEVICECOMMANDID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "DEVICECOMMANDS_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DEVICEERRORMESSAGES_DEVIC_TRIG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "DEVICEERRORMESSAGES_DEVIC_TRIG" BEFORE INSERT OR UPDATE ON deviceerrormessages
FOR EACH ROW
DECLARE 
v_newVal NUMBER(12) := 0;
v_incval NUMBER(12) := 0;
BEGIN
  IF INSERTING AND :new.DeviceErrorMessageId IS NULL THEN
    SELECT  deviceerrormessages_Devic_2SEQ.NEXTVAL INTO v_newVal FROM DUAL;
    -- If this is the first time this table have been inserted into (sequence == 1)
    IF v_newVal = 1 THEN 
      --get the max indentity value from the table
      SELECT NVL(max(DeviceErrorMessageId),0) INTO v_newVal FROM deviceerrormessages;
      v_newVal := v_newVal + 1;
      --set the sequence to that value
      LOOP
           EXIT WHEN v_incval>=v_newVal;
           SELECT deviceerrormessages_Devic_2SEQ.nextval INTO v_incval FROM dual;
      END LOOP;
    END IF;
   -- assign the value from the sequence to emulate the identity column
   :new.DeviceErrorMessageId := v_newVal;
  END IF;
END;
/
ALTER TRIGGER "DEVICEERRORMESSAGES_DEVIC_TRIG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DEVICELOGS_DEVICELOGID_TRIG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "DEVICELOGS_DEVICELOGID_TRIG" BEFORE INSERT OR UPDATE ON devicelogs
FOR EACH ROW
DECLARE 
v_newVal NUMBER(12) := 0;
v_incval NUMBER(12) := 0;
BEGIN
  IF INSERTING AND :new.DeviceLogId IS NULL THEN
    SELECT  devicelogs_DeviceLogId_2SEQ.NEXTVAL INTO v_newVal FROM DUAL;
    -- If this is the first time this table have been inserted into (sequence == 1)
    IF v_newVal = 1 THEN 
      --get the max indentity value from the table
      SELECT NVL(max(DeviceLogId),0) INTO v_newVal FROM devicelogs;
      v_newVal := v_newVal + 1;
      --set the sequence to that value
      LOOP
           EXIT WHEN v_incval>=v_newVal;
           SELECT devicelogs_DeviceLogId_2SEQ.nextval INTO v_incval FROM dual;
      END LOOP;
    END IF;
   -- assign the value from the sequence to emulate the identity column
   :new.DeviceLogId := v_newVal;
  END IF;
END;
/
ALTER TRIGGER "DEVICELOGS_DEVICELOGID_TRIG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DEVICELOGS_PROCESSED_DEVI_TRIG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "DEVICELOGS_PROCESSED_DEVI_TRIG" BEFORE INSERT OR UPDATE ON devicelogs_processed
FOR EACH ROW
DECLARE 
v_newVal NUMBER(12) := 0;
v_incval NUMBER(12) := 0;
BEGIN
  IF INSERTING AND :new.DeviceLogId IS NULL THEN
    SELECT  devicelogs_processed_Devi_2SEQ.NEXTVAL INTO v_newVal FROM DUAL;
    -- If this is the first time this table have been inserted into (sequence == 1)
    IF v_newVal = 1 THEN 
      --get the max indentity value from the table
      SELECT NVL(max(DeviceLogId),0) INTO v_newVal FROM devicelogs_processed;
      v_newVal := v_newVal + 1;
      --set the sequence to that value
      LOOP
           EXIT WHEN v_incval>=v_newVal;
           SELECT devicelogs_processed_Devi_2SEQ.nextval INTO v_incval FROM dual;
      END LOOP;
    END IF;
   -- assign the value from the sequence to emulate the identity column
   :new.DeviceLogId := v_newVal;
  END IF;
END;
/
ALTER TRIGGER "DEVICELOGS_PROCESSED_DEVI_TRIG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DEVICELOGSINFOBL_DEVICELO_TRIG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "DEVICELOGSINFOBL_DEVICELO_TRIG" BEFORE INSERT OR UPDATE ON devicelogsinfobl
FOR EACH ROW
DECLARE 
v_newVal NUMBER(12) := 0;
v_incval NUMBER(12) := 0;
BEGIN
  IF INSERTING AND :new.DeviceLogId IS NULL THEN
    SELECT  devicelogsinfobl_DeviceLo_2SEQ.NEXTVAL INTO v_newVal FROM DUAL;
    -- If this is the first time this table have been inserted into (sequence == 1)
    IF v_newVal = 1 THEN 
      --get the max indentity value from the table
      SELECT NVL(max(DeviceLogId),0) INTO v_newVal FROM devicelogsinfobl;
      v_newVal := v_newVal + 1;
      --set the sequence to that value
      LOOP
           EXIT WHEN v_incval>=v_newVal;
           SELECT devicelogsinfobl_DeviceLo_2SEQ.nextval INTO v_incval FROM dual;
      END LOOP;
    END IF;
   -- assign the value from the sequence to emulate the identity column
   :new.DeviceLogId := v_newVal;
  END IF;
END;
/
ALTER TRIGGER "DEVICELOGSINFOBL_DEVICELO_TRIG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DEVICEOPERATIONLOGS_DEVIC_TRIG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "DEVICEOPERATIONLOGS_DEVIC_TRIG" BEFORE INSERT OR UPDATE ON deviceoperationlogs
FOR EACH ROW
DECLARE 
v_newVal NUMBER(12) := 0;
v_incval NUMBER(12) := 0;
BEGIN
  IF INSERTING AND :new.DeviceOperationLogId IS NULL THEN
    SELECT  deviceoperationlogs_Devic_2SEQ.NEXTVAL INTO v_newVal FROM DUAL;
    -- If this is the first time this table have been inserted into (sequence == 1)
    IF v_newVal = 1 THEN 
      --get the max indentity value from the table
      SELECT NVL(max(DeviceOperationLogId),0) INTO v_newVal FROM deviceoperationlogs;
      v_newVal := v_newVal + 1;
      --set the sequence to that value
      LOOP
           EXIT WHEN v_incval>=v_newVal;
           SELECT deviceoperationlogs_Devic_2SEQ.nextval INTO v_incval FROM dual;
      END LOOP;
    END IF;
   -- assign the value from the sequence to emulate the identity column
   :new.DeviceOperationLogId := v_newVal;
  END IF;
END;
/
ALTER TRIGGER "DEVICEOPERATIONLOGS_DEVIC_TRIG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DEVICES_DEVICEID_TRIG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "DEVICES_DEVICEID_TRIG" BEFORE INSERT OR UPDATE ON devices
FOR EACH ROW
DECLARE 
v_newVal NUMBER(12) := 0;
v_incval NUMBER(12) := 0;
BEGIN
  IF INSERTING AND :new.DeviceId IS NULL THEN
    SELECT  devices_DeviceId_2SEQ.NEXTVAL INTO v_newVal FROM DUAL;
    -- If this is the first time this table have been inserted into (sequence == 1)
    IF v_newVal = 1 THEN 
      --get the max indentity value from the table
      SELECT NVL(max(DeviceId),0) INTO v_newVal FROM devices;
      v_newVal := v_newVal + 1;
      --set the sequence to that value
      LOOP
           EXIT WHEN v_incval>=v_newVal;
           SELECT devices_DeviceId_2SEQ.nextval INTO v_incval FROM dual;
      END LOOP;
    END IF;
   -- assign the value from the sequence to emulate the identity column
   :new.DeviceId := v_newVal;
  END IF;
END;
/
ALTER TRIGGER "DEVICES_DEVICEID_TRIG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger EMPLOYEES_EMPLOYEEID_TRIG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "EMPLOYEES_EMPLOYEEID_TRIG" BEFORE INSERT OR UPDATE ON employees
FOR EACH ROW
DECLARE 
v_newVal NUMBER(12) := 0;
v_incval NUMBER(12) := 0;
BEGIN
  IF INSERTING AND :new.EmployeeId IS NULL THEN
    SELECT  employees_EmployeeId_1SEQ.NEXTVAL INTO v_newVal FROM DUAL;
    -- If this is the first time this table have been inserted into (sequence == 1)
    IF v_newVal = 1 THEN 
      --get the max indentity value from the table
      SELECT NVL(max(EmployeeId),0) INTO v_newVal FROM employees;
      v_newVal := v_newVal + 1;
      --set the sequence to that value
      LOOP
           EXIT WHEN v_incval>=v_newVal;
           SELECT employees_EmployeeId_1SEQ.nextval INTO v_incval FROM dual;
      END LOOP;
    END IF;
   -- assign the value from the sequence to emulate the identity column
   :new.EmployeeId := v_newVal;
  END IF;
END;
/
ALTER TRIGGER "EMPLOYEES_EMPLOYEEID_TRIG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger EMPLOYEESBIO_EMPLOYEEBIOI_TRIG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "EMPLOYEESBIO_EMPLOYEEBIOI_TRIG" BEFORE INSERT OR UPDATE ON employeesbio
FOR EACH ROW
DECLARE 
v_newVal NUMBER(12) := 0;
v_incval NUMBER(12) := 0;
BEGIN
  IF INSERTING AND :new.EmployeeBioId IS NULL THEN
    SELECT  employeesbio_EmployeeBioI_2SEQ.NEXTVAL INTO v_newVal FROM DUAL;
    -- If this is the first time this table have been inserted into (sequence == 1)
    IF v_newVal = 1 THEN 
      --get the max indentity value from the table
      SELECT NVL(max(EmployeeBioId),0) INTO v_newVal FROM employeesbio;
      v_newVal := v_newVal + 1;
      --set the sequence to that value
      LOOP
           EXIT WHEN v_incval>=v_newVal;
           SELECT employeesbio_EmployeeBioI_2SEQ.nextval INTO v_incval FROM dual;
      END LOOP;
    END IF;
   -- assign the value from the sequence to emulate the identity column
   :new.EmployeeBioId := v_newVal;
  END IF;
END;
/
ALTER TRIGGER "EMPLOYEESBIO_EMPLOYEEBIOI_TRIG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger USERS_USERID_TRIG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "USERS_USERID_TRIG" BEFORE INSERT OR UPDATE ON users
FOR EACH ROW
DECLARE 
v_newVal NUMBER(12) := 0;
v_incval NUMBER(12) := 0;
BEGIN
  IF INSERTING AND :new.UserId IS NULL THEN
    SELECT  users_UserId_2SEQ.NEXTVAL INTO v_newVal FROM DUAL;
    -- If this is the first time this table have been inserted into (sequence == 1)
    IF v_newVal = 1 THEN 
      --get the max indentity value from the table
      SELECT NVL(max(UserId),0) INTO v_newVal FROM users;
      v_newVal := v_newVal + 1;
      --set the sequence to that value
      LOOP
           EXIT WHEN v_incval>=v_newVal;
           SELECT users_UserId_2SEQ.nextval INTO v_incval FROM dual;
      END LOOP;
    END IF;
   -- assign the value from the sequence to emulate the identity column
   :new.UserId := v_newVal;
  END IF;
END;
/
ALTER TRIGGER "USERS_USERID_TRIG" ENABLE;

create or replace function custom_hash (p_username in varchar2, p_password in varchar2)
return varchar2
is
  l_password varchar2(4000);
  l_salt varchar2(4000) := 'A5Y792VCTCXMX695ITWVZ27T23CBOC';
begin

-- This function should be wrapped, as the hash algorhythm is exposed here.
-- You can change the value of l_salt or the method of which to call the
-- DBMS_OBFUSCATOIN toolkit, but you much reset all of your passwords
-- if you choose to do this.

l_password := utl_raw.cast_to_raw(dbms_obfuscation_toolkit.md5
  (input_string => p_password));
return l_password;
end;

-- create or replace function custom_hash (p_username in varchar2, p_password in varchar2)
-- return varchar2
-- is
--   l_password varchar2(4000);
--   l_salt varchar2(4000) := 'A5Y792VCTCXMX695ITWVZ27T23CBOC';
-- begin

-- This function should be wrapped, as the hash algorhythm is exposed here.
-- You can change the value of l_salt or the method of which to call the
-- DBMS_OBFUSCATOIN toolkit, but you much reset all of your passwords
-- if you choose to do this.

-- l_password := utl_raw.cast_to_raw(dbms_obfuscation_toolkit.md5
--   (input_string => p_password || substr(l_salt,10,13) || p_username ||
--     substr(l_salt, 4,10)));
-- return l_password;
-- end;
